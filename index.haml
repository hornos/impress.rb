!!! 5
%html{ :lang => "en" }
  %head
    %meta{ :charset => "utf-8" }
    %meta{ :name => "viewport", :content => "width=1024" }
    %meta{ :name => "apple-mobile-web-app-capable", :content => "yes" }

    %meta{ :name => "description", :content => "impress.js is a presentation tool based on the power of CSS3 transforms and transitions in modern browsers and inspired by the idea behind prezi.com." }
    %meta{ :name => "author", :content => "Bartek Szopka" }

    %title impress.js | presentation tool based on the power of CSS3 transforms and transitions in modern browsers | by Bartek Szopka @bartaz

    %link{ :href => "http://fonts.googleapis.com/css?family=Open+Sans:regular,semibold,italic,italicsemibold|PT+Sans:400,700,400italic,700italic|PT+Serif:400,700,400italic,700italic", :rel => "stylesheet" }
    %link{ :href => "css/impress-demo.css", :rel => "stylesheet" }
    %link{ :href => "favicon.png", :rel => "shortcut icon" }
    %link{ :href => "apple-touch-icon.png", :rel => "apple-touch-icon" }

  %body{ :class => "impress-not-supported"}
    .fallback-message
      :markdown
        Your browser **doesn't support the features required** by impress.js, so you are presented with a simplified version of this presentation.
      :markdown
        For the best experience please use the latest **Chrome**, **Safari** or **Firefox** browser.

    #impress

      #bored{ :class => "step slide", "data-x" => "-1000", "data-y" => "-1500" }
        %q Aren't you just <b>bored</b> with all those slides-based presentations?

      .step.slide{ "data-x" => "0", "data-y" => "-1500" }
        %q Don't you think that presentations given <b>in modern browsers</b> shouldn't <b>copy the limits</b> of 'classic' slide decks?

      .step.slide{ "data-x" => "1000", "data-y" => "-1500" }
        %q Would you like to <b>impress your audience</b> with <b>stunning visualization</b> of your talk?

      #title.step{ "data-x" => "0", "data-y" => "0", "data-scale" => "4" }
        %span.try then you should try
        %h1 impress.js<sup>*</sup>
        %span.footnote <sup>*</sup> no rhyme intended

      #its.step{ "data-x" => "850", "data-y" => "3000", "data-rotate" => "90", "data-scale" => "5" }
        :markdown
          It's a **presentation tool**   
          inspired by the idea behind [prezi.com](http://prezi.com")   
          and based on the **power of CSS3 transforms and transitions** in modern browsers.

      #big.step{ "data-x" => "3500", "data-y" => "2100", "data-rotate" => "180", "data-scale" => "6" }
        :markdown
          visualize your <b>big</b> <span class="thoughts">thoughts</span>

      #tiny.step{ "data-x" => "2825", "data-y" => "2325", "data-z" => "-3000", "data-rotate" => "300", "data-scale" => "1" }
        :markdown
          and **tiny** ideas

      #ing.step{ "data-x" => "3500", "data-y" => "-850", "data-rotate" => "270", "data-scale" => "6" }
        %p by <b class="positioning">positioning</b>, <b class="rotating">rotating</b> and <b class="scaling">scaling</b> them on an infinite canvas

      #imagination.step{ "data-x" => "6700", "data-y" => "-300", "data-scale" => "6" }
        %p the only <b>limit</b> is your <b class="imagination">imagination</b>

      #source.step{ "data-x" => "6300", "data-y" => "2000", "data-rotate" => "20", "data-scale" => "4" }
        :markdown
          want to know more?
        %q <a href="http://github.com/bartaz/impress.js">use the source</a>, Luke!

      #one-more-thing.step{ "data-x" => "6000", "data-y" => "4000", "data-scale" => "2" }
        %p one more thing...

      #its-in-3d.step{ "data-x" => "6200", "data-y" => "4300", "data-z" => "-100", "data-rotate-x" => "-40", "data-rotate-y" => "10", "data-scale" => "2" }
        %p <span class="have">have</span> <span class="you">you</span> <span class="noticed">noticed</span> <span class="its">it's</span> <span class="in">in</span> <b>3D<sup>*</sup></b>?
        %span.footnote * beat that, prezi ;)

      #overview.step{ "data-x" => "3000", "data-y" => "1500", "data-scale" => "10" }

    .hint
      %p Use a spacebar or arrow keys to navigate

    :javascript
      if ("ontouchstart" in document.documentElement)
        document.querySelector(".hint").innerHTML = "<p>Tap on the left or right to navigate</p>";

    %script{ :src => "js/impress.js" }

    :javascript
      impress().init();
